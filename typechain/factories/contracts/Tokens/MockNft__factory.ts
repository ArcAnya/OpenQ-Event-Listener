/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockNft,
  MockNftInterface,
} from "../../../contracts/Tokens/MockNft";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805180820182526007815266135bd8dad3999d60ca1b6020808301918252835180850190945260048452631353919560e21b9084015281519192916200005d91600091620000ec565b50805162000073906001906020840190620000ec565b505050620000906200008a6200009660201b60201c565b6200009a565b620001ce565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000fa9062000192565b90600052602060002090601f0160209004810192826200011e576000855562000169565b82601f106200013957805160ff191683800117855562000169565b8280016001018555821562000169579182015b82811115620001695782518255916020019190600101906200014c565b50620001779291506200017b565b5090565b5b808211156200017757600081556001016200017c565b600181811c90821680620001a757607f821691505b602082108103620001c857634e487b7160e01b600052602260045260246000fd5b50919050565b6114a480620001de6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a2578063a22cb46511610071578063a22cb4651461021b578063b88d4fde1461022e578063c87b56dd14610241578063e985e9c514610254578063f2fde38b1461029057600080fd5b806370a08231146101d9578063715018a6146101fa5780638da5cb5b1461020257806395d89b411461021357600080fd5b806323b872dd116100de57806323b872dd1461018d57806340d097c3146101a057806342842e0e146101b35780636352211e146101c657600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e366004610fba565b6102a3565b60405190151581526020015b60405180910390f35b6101406102f5565b60405161012f919061102f565b61016061015b366004611042565b610387565b6040516001600160a01b03909116815260200161012f565b61018b610186366004611077565b6103ae565b005b61018b61019b3660046110a1565b6104c8565b61018b6101ae3660046110dd565b6104f9565b61018b6101c13660046110a1565b61052a565b6101606101d4366004611042565b610545565b6101ec6101e73660046110dd565b6105a5565b60405190815260200161012f565b61018b61062b565b6006546001600160a01b0316610160565b61014061063f565b61018b6102293660046110f8565b61064e565b61018b61023c36600461114a565b610659565b61014061024f366004611042565b610691565b610123610262366004611226565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61018b61029e3660046110dd565b610705565b60006001600160e01b031982166380ac58cd60e01b14806102d457506001600160e01b03198216635b5e139f60e01b145b806102ef57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461030490611259565b80601f016020809104026020016040519081016040528092919081815260200182805461033090611259565b801561037d5780601f106103525761010080835404028352916020019161037d565b820191906000526020600020905b81548152906001019060200180831161036057829003601f168201915b5050505050905090565b60006103928261077e565b506000908152600460205260409020546001600160a01b031690565b60006103b982610545565b9050806001600160a01b0316836001600160a01b03160361042b5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061044757506104478133610262565b6104b95760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610422565b6104c383836107dd565b505050565b6104d2338261084b565b6104ee5760405162461bcd60e51b815260040161042290611293565b6104c38383836108ca565b610501610a66565b600061050c60075490565b905061051c600780546001019055565b6105268282610ac0565b5050565b6104c383838360405180602001604052806000815250610659565b6000818152600260205260408120546001600160a01b0316806102ef5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610422565b60006001600160a01b03821661060f5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610422565b506001600160a01b031660009081526003602052604090205490565b610633610a66565b61063d6000610ada565b565b60606001805461030490611259565b610526338383610b2c565b610663338361084b565b61067f5760405162461bcd60e51b815260040161042290611293565b61068b84848484610bfa565b50505050565b606061069c8261077e565b60006106b360408051602081019091526000815290565b905060008151116106d357604051806020016040528060008152506106fe565b806106dd84610c2d565b6040516020016106ee9291906112e1565b6040516020818303038152906040525b9392505050565b61070d610a66565b6001600160a01b0381166107725760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610422565b61077b81610ada565b50565b6000818152600260205260409020546001600160a01b031661077b5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610422565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061081282610545565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061085783610545565b9050806001600160a01b0316846001600160a01b0316148061089e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806108c25750836001600160a01b03166108b784610387565b6001600160a01b0316145b949350505050565b826001600160a01b03166108dd82610545565b6001600160a01b0316146109415760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610422565b6001600160a01b0382166109a35760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610422565b6109ae6000826107dd565b6001600160a01b03831660009081526003602052604081208054600192906109d7908490611326565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a0590849061133d565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b0316331461063d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610422565b610526828260405180602001604052806000815250610d2e565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610b8d5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610422565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610c058484846108ca565b610c1184848484610d61565b61068b5760405162461bcd60e51b815260040161042290611355565b606081600003610c545750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610c7e5780610c68816113a7565b9150610c779050600a836113d6565b9150610c58565b60008167ffffffffffffffff811115610c9957610c99611134565b6040519080825280601f01601f191660200182016040528015610cc3576020820181803683370190505b5090505b84156108c257610cd8600183611326565b9150610ce5600a866113ea565b610cf090603061133d565b60f81b818381518110610d0557610d056113fe565b60200101906001600160f81b031916908160001a905350610d27600a866113d6565b9450610cc7565b610d388383610e62565b610d456000848484610d61565b6104c35760405162461bcd60e51b815260040161042290611355565b60006001600160a01b0384163b15610e5757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610da5903390899088908890600401611414565b6020604051808303816000875af1925050508015610de0575060408051601f3d908101601f19168201909252610ddd91810190611451565b60015b610e3d573d808015610e0e576040519150601f19603f3d011682016040523d82523d6000602084013e610e13565b606091505b508051600003610e355760405162461bcd60e51b815260040161042290611355565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108c2565b506001949350505050565b6001600160a01b038216610eb85760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610422565b6000818152600260205260409020546001600160a01b031615610f1d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610422565b6001600160a01b0382166000908152600360205260408120805460019290610f4690849061133d565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461077b57600080fd5b600060208284031215610fcc57600080fd5b81356106fe81610fa4565b60005b83811015610ff2578181015183820152602001610fda565b8381111561068b5750506000910152565b6000815180845261101b816020860160208601610fd7565b601f01601f19169290920160200192915050565b6020815260006106fe6020830184611003565b60006020828403121561105457600080fd5b5035919050565b80356001600160a01b038116811461107257600080fd5b919050565b6000806040838503121561108a57600080fd5b6110938361105b565b946020939093013593505050565b6000806000606084860312156110b657600080fd5b6110bf8461105b565b92506110cd6020850161105b565b9150604084013590509250925092565b6000602082840312156110ef57600080fd5b6106fe8261105b565b6000806040838503121561110b57600080fd5b6111148361105b565b91506020830135801515811461112957600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561116057600080fd5b6111698561105b565b93506111776020860161105b565b925060408501359150606085013567ffffffffffffffff8082111561119b57600080fd5b818701915087601f8301126111af57600080fd5b8135818111156111c1576111c1611134565b604051601f8201601f19908116603f011681019083821181831017156111e9576111e9611134565b816040528281528a602084870101111561120257600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561123957600080fd5b6112428361105b565b91506112506020840161105b565b90509250929050565b600181811c9082168061126d57607f821691505b60208210810361128d57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b600083516112f3818460208801610fd7565b835190830190611307818360208801610fd7565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561133857611338611310565b500390565b6000821982111561135057611350611310565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600182016113b9576113b9611310565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826113e5576113e56113c0565b500490565b6000826113f9576113f96113c0565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061144790830184611003565b9695505050505050565b60006020828403121561146357600080fd5b81516106fe81610fa456fea2646970667358221220f4f1d3c57afba05415f43411533aee6844a0247462e2b045b4d103afd9b1361064736f6c634300080d0033";

type MockNftConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockNftConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockNft__factory extends ContractFactory {
  constructor(...args: MockNftConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockNft> {
    return super.deploy(overrides || {}) as Promise<MockNft>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockNft {
    return super.attach(address) as MockNft;
  }
  override connect(signer: Signer): MockNft__factory {
    return super.connect(signer) as MockNft__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockNftInterface {
    return new utils.Interface(_abi) as MockNftInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockNft {
    return new Contract(address, _abi, signerOrProvider) as MockNft;
  }
}
